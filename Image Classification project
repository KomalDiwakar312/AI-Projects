!pip install sklearn
!pip install cross_validation
import numpy as np
import pandas as pd
import sklearn
from matplotlib import pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn import model_selection
from sklearn.model_selection import train_test_split
#import train_test_split 
%matplotlib inline

data=pd.read_csv("/content/sample_data/mnist_test.csv")
print(data.head(5))

a=data.iloc[3,1:].values
a=a.reshape(28,28).astype("uint8")
plt.imshow(a)

#preparing the data
#seperating labels and data values
df_x=data.iloc[:,1:]
df_y=data.iloc[:,0] 


#creating test size and train size
x_train, x_test, y_train, y_test = train_test_split(df_x,df_y,test_size=0.2,random_state=4)
print(x_train.head())
print(y_train.head())

#call rf classifier
rf=RandomForestClassifier(n_estimators=100)

#fit the model 
rf.fit(x_train,y_train)

#prediction in test data
pred=rf.predict(x_test)
print(pred)

#check prediction accuracy
s=y_test.values

#calculating the no. of correctly predicted values
count=0
for i in range(len(pred)):
  if pred[i]==s[i]:
    count=count+1
    

print(count)
# total values that to predict the code was run on
print(len(pred))

#find accuracy value
#1892/2000
print(count/len(pred))
